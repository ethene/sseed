name: Tests

on:
  push:
    branches: [ main, develop ]
    paths: ['sseed/**', 'tests/**', 'pyproject.toml', 'requirements.txt']
  pull_request:
    branches: [ main, develop ]
    paths: ['sseed/**', 'tests/**', 'pyproject.toml', 'requirements.txt']

env:
  MINIMUM_COVERAGE: 90

jobs:
  fast-check:
    name: Fast Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint check (Pylint)
      run: |
        pylint sseed/ --fail-under=9.5
    
    - name: Type check (MyPy)  
      run: |
        mypy sseed/
    
    - name: Style check (Black)
      run: |
        black --check sseed/ tests/

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: fast-check
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests with coverage
      run: |
        python -m pytest \
          --cov=sseed \
          --cov-report=xml \
          --cov-fail-under=${{ env.MINIMUM_COVERAGE }} \
          -v tests/
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.12'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  verify-build:
    name: Verify Package Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Verify package
      run: |
        python -m twine check dist/*
        
        # Test installation
        python -m venv test-env
        source test-env/bin/activate
        pip install dist/*.whl
        python -c "import sseed; print(f'âœ… Version: {sseed.__version__}')" 