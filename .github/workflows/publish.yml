name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to publish (e.g., v1.8.2)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/sseed
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Verify version consistency
      run: |
        # Extract version from tag (handle both release and manual dispatch)
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG_VERSION="${{ inputs.tag }}"
          TAG_VERSION=${TAG_VERSION#v}
        else
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION=${TAG_VERSION#v}
        fi
        
        # Extract version from __init__.py
        CODE_VERSION=$(python -c "from sseed import __version__; print(__version__)")
        
        echo "Tag version: $TAG_VERSION"
        echo "Code version: $CODE_VERSION"
        
        if [ "$TAG_VERSION" != "$CODE_VERSION" ]; then
          echo "‚ùå Version mismatch between tag ($TAG_VERSION) and code ($CODE_VERSION)"
          exit 1
        else
          echo "‚úÖ Version consistency verified: $CODE_VERSION"
        fi

    - name: Build distribution packages
      run: |
        echo "üî® Building distribution packages..."
        python -m build

    - name: Verify built packages
      run: |
        echo "üìã Verifying built packages..."
        python -m twine check dist/*
        
        echo "üì¶ Built packages:"
        ls -la dist/

    - name: Test package installation
      run: |
        echo "üß™ Testing package installation..."
        python -m venv test-env
        source test-env/bin/activate
        pip install dist/*.whl
        
        # Test basic functionality
        python -c "
        import sseed
        print(f'‚úÖ SSeed version: {sseed.__version__}')
        "
        
        # Test CLI
        python -m sseed --version

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true

    - name: Verify PyPI publication
      run: |
        echo "‚è≥ Waiting for PyPI propagation..."
        sleep 30
        
        # Verify package is available on PyPI
        pip index versions sseed
        
        echo "‚úÖ Package successfully published to PyPI!" 