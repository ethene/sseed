{
  "permissions": {
    "allow": [
      "Bash(conda activate:*)",
      "Bash(python:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(make:*)",
      "Bash(touch:*)",
      "Bash(git push:*)",
      "Bash(git filter-branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git ls-tree:*)",
      "Bash(git tag:*)",
      "Bash(grep:*)",
      "Bash(bandit:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(pip install:*)",
      "Bash(ls:*)",
      "Bash(echo:*)",
      "Bash(awk:*)",
      "Bash(--cov=sseed )",
      "Bash(--cov-report=term-missing )",
      "Bash(--cov-report=xml )",
      "Bash(--cov-report=html )",
      "Bash(--cov-fail-under=85 )",
      "Bash(--junit-xml=pytest-results.xml )",
      "Bash(--html=pytest-report.html )",
      "Bash(--self-contained-html )",
      "Bash(-v )",
      "Bash(--tb=short )",
      "Bash(--strict-markers )",
      "Bash(--disable-warnings )",
      "Bash(tests/)",
      "Bash(gh release:*)",
      "Bash(gh run list:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh run watch:*)",
      "Bash(pip index versions:*)",
      "Bash(gh run view:*)",
      "Bash(curl:*)",
      "Bash(source:*)",
      "Bash(sseed:*)",
      "Bash(PYTHONPATH=/Users/dmitrystakhin/Library/CloudStorage/Dropbox/work/slip39 python -c \"\nimport sseed.cli.commands.gen\nfrom argparse import Namespace\nfrom sseed.languages import get_language_by_code\n\n# Create mock args\nargs = Namespace()\nargs.output = None\nargs.words = 12\nargs.language = 'en'\nargs.entropy_hex = None\nargs.entropy_dice = None\nargs.allow_weak = False\nargs.force = False\nargs.entropy_analysis = True\nargs.show_entropy = False\n\n# Test the command\ngen_cmd = sseed.cli.commands.gen.GenCommand()\nresult = gen_cmd.handle(args)\nprint(f'Exit code: {result}')\n\")",
      "Bash(pip uninstall:*)",
      "Bash(sed:*)",
      "Bash(pytest:*)",
      "Bash(git fetch:*)",
      "Bash(git check-ignore:*)",
      "Bash(rm:*)",
      "WebFetch(domain:bip-utils.readthedocs.io)",
      "Bash(mkdir:*)",
      "Bash(git rm:*)"
    ],
    "deny": []
  }
}